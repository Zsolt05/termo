// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Termo.Data;

#nullable disable

namespace Termo.Data.Migrations
{
    [DbContext(typeof(TermoDbContext))]
    partial class TermoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Termo.Data.Models.BourdonTest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("charsViewed")
                        .HasColumnType("int");

                    b.Property<int>("correctlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("correctlyMarked")
                        .HasColumnType("int");

                    b.Property<int>("incorrectlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("incorrectlyMarked")
                        .HasColumnType("int");

                    b.Property<int>("linesViewed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("BourdonTests");
                });

            modelBuilder.Entity("Termo.Data.Models.ChairLampTest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("ChairLampTests");
                });

            modelBuilder.Entity("Termo.Data.Models.ChairLampTestItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ChairLampTestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CorrectlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("CorrectlyMarked")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncorrectlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("IncorrectlyMarked")
                        .HasColumnType("int");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<int>("PicturesRevised")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChairLampTestId");

                    b.ToTable("ChairLampTestItems");
                });

            modelBuilder.Entity("Termo.Data.Models.Test", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Termo.Data.Models.ToulousePieronTest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CorrectlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("CorrectlyMarked")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncorrectlyIgnored")
                        .HasColumnType("int");

                    b.Property<int>("IncorrectlyMarked")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("ToulousePieronTests");
                });

            modelBuilder.Entity("Termo.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Termo.Data.Models.BourdonTest", b =>
                {
                    b.HasOne("Termo.Data.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Termo.Data.Models.ChairLampTest", b =>
                {
                    b.HasOne("Termo.Data.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Termo.Data.Models.ChairLampTestItem", b =>
                {
                    b.HasOne("Termo.Data.Models.ChairLampTest", "ChairLampTest")
                        .WithMany("ChairLampTestItems")
                        .HasForeignKey("ChairLampTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChairLampTest");
                });

            modelBuilder.Entity("Termo.Data.Models.Test", b =>
                {
                    b.HasOne("Termo.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Termo.Data.Models.ToulousePieronTest", b =>
                {
                    b.HasOne("Termo.Data.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Termo.Data.Models.ChairLampTest", b =>
                {
                    b.Navigation("ChairLampTestItems");
                });
#pragma warning restore 612, 618
        }
    }
}
